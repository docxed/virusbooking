pipeline {
    agent any
    // environment{
    //     TOKEN_KEY = credentials('TOKEN_KEY')
    //     DB_HOST = credentials('DB_HOST')
    //     DB_USER = credentials('DB_USER')
    //     DB_PASSWORD = credentials('DB_PASSWORD')
    //     DB_NAME = credentials('DB_NAME')
    // }
    stages {
        stage('Pull code') {
            steps {
                checkout scm
            }
        }
        stage('Download dependencies') {
            steps {
                dir('backend') {
                    sh 'yarn install'
                }
            }
        }
        stage('Write env') {
            steps {
                dir('backend') {
                    script {
                        def date = "TOKEN_KEY=" + credentials('TOKEN_KEY') + "\n" +
                                "DB_HOST=" + credentials('DB_HOST') + "\n" +
                                "DB_USER=" + credentials('DB_USER') + "\n" +
                                "DB_PASSWORD=" + credentials('DB_PASSWORD') + "\n" +
                                "DB_NAME=" + credentials('DB_NAME') + "\n"
                        writeFile(file: '.env', text: data)
                        sh "ls -l"
                    }
                }
            }
        }
        stage('Build') {
            steps {
                dir('backend') {
                    sh 'yarn build'
                }
            }
        }
        stage('Unit Test') {
            steps {
                dir('backend') {
                    sh 'yarn unit'
                }
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './backend', reportFiles: 'unit.html', reportName: 'Unit Test Report', reportTitles: 'Unit Test Report'])
            }
        }
        stage('Unit Test Coverage') {
            steps {
                dir('backend') {
                    sh 'yarn unit:coverage'
                }
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './backend', reportFiles: 'unit-coverage.html', reportName: 'Unit Test Coverage Report', reportTitles: 'Unit Test Coverage Report'])
            }
        }
        // stage('Component Test') {
        //     steps {
        //         dir('backend') {
        //             sh 'yarn test:component'
        //         }
        //     }
        // }
        // stage('Component Test Coverage') {
        //     steps {
        //         dir('backend') {
        //             sh 'yarn test:component:coverage'
        //         }
        //     }
        // }
        // stage('Create Component Test Report') {
        //     steps {
        //         dir('backend') {
        //             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './', reportFiles: 'component.html', reportName: 'Component Test Report', reportTitles: 'Component Test Report'])
        //         }
        //     }
        // }
        // stage('Create Component Test Coverage Report') {
        //     steps {
        //         dir('backend') {
        //             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './', reportFiles: 'component-coverage.html', reportName: 'Component Test Coverage Report', reportTitles: 'Component Test Coverage Report'])
        //         }
        //     }
        // }
        // stage('E2E Test') {
        //     steps {
        //         dir('backend') {
        //             sh "yarn test:e2e"
        //         }
        //     }
        // }
    }
}